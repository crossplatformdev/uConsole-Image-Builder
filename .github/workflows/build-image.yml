name: Build uConsole Image (Reusable)

on:
  workflow_call:
    inputs:
      distro:
        description: 'Distribution name (popos, trixie, jammy)'
        required: true
        type: string
      script-path:
        description: 'Path to the build customization script'
        required: true
        type: string
      tag-prefix:
        description: 'Prefix for git tags (e.g., popos-, trixie-, jammy-)'
        required: true
        type: string
      suite:
        description: 'Debootstrap suite to use (jammy or trixie)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    concurrency:
      group: build-${{ inputs.distro }}
      cancel-in-progress: false
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up QEMU for cross-architecture
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap qemu-user-static binfmt-support
      
      - name: Build base rootfs for ${{ inputs.distro }}
        run: |
          SUITE=${{ inputs.suite }} ARCH=arm64 ./scripts/build-image.sh build-output
        env:
          DEBIAN_FRONTEND: noninteractive
      
      - name: Apply ${{ inputs.distro }} customizations
        run: |
          ${{ inputs.script-path }} build-output
        env:
          DEBIAN_FRONTEND: noninteractive
      
      - name: Create tarball artifact
        run: |
          cd build-output
          tar -czf uconsole-${{ inputs.distro }}-arm64-rootfs.tar.gz rootfs-${{ inputs.suite }}-arm64
          chown $USER:$USER uconsole-${{ inputs.distro }}-arm64-rootfs.tar.gz
          ls -lh uconsole-${{ inputs.distro }}-arm64-rootfs.tar.gz
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: uconsole-${{ inputs.distro }}-arm64-rootfs
          path: build-output/uconsole-${{ inputs.distro }}-arm64-rootfs.tar.gz
          retention-days: 30
      
      - name: Generate tag name
        id: tag
        run: |
          TAG_DATE=$(date +'%Y%m%d')
          TAG_NAME="${{ inputs.tag-prefix }}${TAG_DATE}"
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "Generated tag: ${TAG_NAME}"
      
      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "${{ steps.tag.outputs.tag_name }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.tag.outputs.tag_name }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.tag.outputs.tag_name }} does not exist"
          fi
      
      - name: Create and push tag
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const tagName = '${{ steps.tag.outputs.tag_name }}';
            const sha = context.sha;
            
            console.log(`Creating tag ${tagName} at ${sha}`);
            
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: sha
            });
            
            console.log(`Tag ${tagName} created successfully`);
      
      - name: Update existing tag artifact
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Tag ${{ steps.tag.outputs.tag_name }} already exists. Artifact uploaded but tag not updated."
          echo "To create a new tag, the build must run on a different day or the existing tag must be deleted."
